function out = model
%
% templateCell.m
%
% Model exported on Sep 3 2018, 12:10 by COMSOL 5.3.1.229.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Users/christinafrederick/Your team Dropbox/christina frederick/research/Sonar 2018');

model.label('generic-cell_modified_mat.mph');

model.comments(['Generic-2D-cell-width-3\n\n']);

model.param.set('width', '20*lambda_min', 'Width of template domain');
model.param.set('height', '1.5', 'Height of template domain');
model.param.set('f0', '10*1.5[kHz]', 'Sonar frequency');
model.param.set('Hpml', '2*lambda_min', 'PML size');
model.param.set('lambda_min', 'c_w/f0', 'Minimal wavelength');
model.param.set('alpha', '10[dB/(m)]', 'Attenuation');
model.param.set('Hsediment', '1.5', 'Height of sediment layer');
model.param.set('L_x', 'width*2^9', 'Number of samples in x direction');
model.param.set('L_y', 'height*2^9', 'Number of samples in z direction');
model.param.set('layer_thickness', '.25', 'Top layer thickness');
model.param.set('c_w', '1500[m/s]', 'Sound Speed in Water');
model.param.set('rho_w', '1000[kg/m^3]', 'Density of water');
model.param.set('c_delta', '1', 'Sound speed multiplier');
model.param.set('rho_delta', '1', 'Density multiplier');
model.param.set('theta', 'pi/2', 'Incident angle');

model.component.create('comp1', false);

model.component('comp1').geom.create('geom1', 2);

model.result.table.create('tbl1', 'Table');

model.func.create('int1', 'Interpolation');
model.func.create('int6', 'Interpolation');
model.component('comp1').func.create('an1', 'Analytic');
model.func('int1').label('Interface 1');
model.func('int1').set('sourcetype', 'model');
model.func('int1').set('importedname', '1D-relief-RMS-0.02-CL-0.02_001.txt');
model.func('int1').set('importedstruct', 'Spreadsheet');
model.func('int1').set('importeddim', '1D');

model.file('res1').resource('/var/folders/zz/jkng242x1dn9dv7g2xhxw2ch0000gn/T/cscomsol044335/tmp6801142561816350717.txt');

model.func('int1').set('source', 'file');
model.func('int1').set('nargs', '1');
model.func('int1').set('struct', 'spreadsheet');
model.func('int6').label('Interface Post-Process');
model.func('int6').set('funcname', 'int7');
model.func('int6').set('table', {'0' '-.1'; 'width-.1' '.1'});
model.component('comp1').func('an1').label('Interface function');
model.component('comp1').func('an1').set('funcname', 'interface');
model.component('comp1').func('an1').set('expr', 'int1(x+1)');
model.component('comp1').func('an1').set('plotargs', {'x' '-.5' '2*width'});

model.component('comp1').mesh.create('mesh1');

model.component('comp1').geom('geom1').repairTolType('relative');
model.component('comp1').geom('geom1').selection.create('csel1', 'CumulativeSelection');
model.component('comp1').geom('geom1').selection('csel1').label('Sediment-Sediment');
model.component('comp1').geom('geom1').selection.create('csel2', 'CumulativeSelection');
model.component('comp1').geom('geom1').selection('csel2').label('Water-Sediment');
model.component('comp1').geom('geom1').create('pc2', 'ParametricCurve');
model.component('comp1').geom('geom1').feature('pc2').label('Lower Interface');
model.component('comp1').geom('geom1').feature('pc2').set('contributeto', 'csel1');
model.component('comp1').geom('geom1').feature('pc2').set('selresult', true);
model.component('comp1').geom('geom1').feature('pc2').set('pos', [0 0]);
model.component('comp1').geom('geom1').feature('pc2').set('parmin', -1);
model.component('comp1').geom('geom1').feature('pc2').set('parmax', 'width+1');
model.component('comp1').geom('geom1').feature('pc2').set('coord', {'s' '-layer_thickness'});
model.component('comp1').geom('geom1').create('pc3', 'ParametricCurve');
model.component('comp1').geom('geom1').feature('pc3').label('Water Sediment Interface');
model.component('comp1').geom('geom1').feature('pc3').set('contributeto', 'csel2');
model.component('comp1').geom('geom1').feature('pc3').set('selresult', true);
model.component('comp1').geom('geom1').feature('pc3').set('pos', [0 0]);
model.component('comp1').geom('geom1').feature('pc3').set('parmin', -1);
model.component('comp1').geom('geom1').feature('pc3').set('parmax', 'width+1');
model.component('comp1').geom('geom1').feature('pc3').set('coord', {'s' 'interface(s)'});
model.component('comp1').geom('geom1').feature('pc3').set('rtol', 1.0E-8);
model.component('comp1').geom('geom1').feature('pc3').set('maxknots', 500000);
model.component('comp1').geom('geom1').create('r1', 'Rectangle');
model.component('comp1').geom('geom1').feature('r1').label('Full Domain');
model.component('comp1').geom('geom1').feature('r1').set('pos', {'-1' '-Hsediment-Hpml'});
model.component('comp1').geom('geom1').feature('r1').set('layername', {'Layer'});
model.component('comp1').geom('geom1').feature('r1').setIndex('layer', 'Hpml', 0);
model.component('comp1').geom('geom1').feature('r1').set('layertop', true);
model.component('comp1').geom('geom1').feature('r1').set('size', {'width+2' 'height+Hsediment+2*Hpml'});
model.component('comp1').geom('geom1').feature('fin').set('repairtoltype', 'relative');
model.component('comp1').geom('geom1').run;
model.component('comp1').geom('geom1').run('fin');

model.component('comp1').variable.create('var2');
model.component('comp1').variable('var2').set('kx_e', 'cos(pi/2-theta)', 'Plane wave direction, x');
model.component('comp1').variable('var2').set('ky_e', '-sin(pi/2-theta)', 'Plane wave direction, y');
model.component('comp1').variable('var2').set('k0', 'intop1(acpr.k)', 'Free-field wave number');
model.component('comp1').variable('var2').set('kx', 'k0*kx_e', 'Background plane wave k_x');
model.component('comp1').variable('var2').set('ky', 'k0*ky_e', 'Background plane wave k_y');
model.component('comp1').variable('var2').set('p_inc', '1[Pa]*exp(-i*(kx*x+ky*y))', 'Incident plane wave');
model.component('comp1').variable('var2').set('p_scat', 'acpr.p_s', 'Scattered wave (water domain)');
model.variable.create('var3');
model.variable('var3').set('c', 'c_sand', 'Sound speed');
model.variable('var3').set('rho', 'rho_sand', 'Density');

model.view.create('view10', 2);
model.view.create('view9', 2);

model.material.create('mat1', 'Common', '');
model.material.create('sw1', 'Switch', '');
model.material.create('sw2', 'Switch', '');
model.component('comp1').material.create('matlnk1', 'Link');
model.component('comp1').material.create('matlnk2', 'Link');
model.material('mat1').propertyGroup('def').func.create('eta', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('Cp', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('rho', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('k', 'Piecewise');
model.material('mat1').propertyGroup('def').func.create('cs', 'Interpolation');
model.material('sw1').feature.create('mat3', 'Common', 'comp1');
model.material('sw1').feature.create('mat4', 'Common', 'comp1');
model.material('sw1').feature.create('mat1', 'Common', 'comp1');
model.material('sw1').feature.create('mat5', 'Common', 'comp1');
model.material('sw2').feature.create('mat4', 'Common', 'comp1');
model.material('sw2').feature.create('mat5', 'Common', 'comp1');
model.material('sw2').feature.create('mat6', 'Common', 'comp1');
model.material('sw2').feature.create('mat7', 'Common', 'comp1');
model.component('comp1').material('matlnk1').selection.set([1 2 3]);
model.component('comp1').material('matlnk2').selection.set([1 2]);

model.component('comp1').cpl.create('intop1', 'Integration');
model.component('comp1').cpl('intop1').selection.geom('geom1', 0);
model.component('comp1').cpl('intop1').selection.set([11]);

model.component('comp1').coordSystem.create('pml1', 'PML');
model.component('comp1').coordSystem.create('pml2', 'PML');
model.component('comp1').coordSystem('pml1').selection.set([5]);
model.component('comp1').coordSystem('pml2').selection.set([1]);

model.component('comp1').physics.create('acpr', 'PressureAcoustics', 'geom1');
model.component('comp1').physics('acpr').create('bpf1', 'BackgroundPressureField', 2);
model.component('comp1').physics('acpr').feature('bpf1').selection.set([4]);
model.component('comp1').physics('acpr').create('fpam2', 'FrequencyPressureAcousticsModel', 2);
model.component('comp1').physics('acpr').feature('fpam2').selection.set([1 2 3]);
model.component('comp1').physics('acpr').create('pc1', 'PeriodicCondition', 1);
model.component('comp1').physics('acpr').feature('pc1').selection.set([3 5 6 11 12 13]);

model.component('comp1').mesh('mesh1').create('ftri2', 'FreeTri');
model.component('comp1').mesh('mesh1').create('map1', 'Map');
model.component('comp1').mesh('mesh1').feature('ftri2').selection.geom('geom1', 2);
model.component('comp1').mesh('mesh1').feature('ftri2').selection.set([2 3 4]);
model.component('comp1').mesh('mesh1').feature('map1').selection.geom('geom1', 2);
model.component('comp1').mesh('mesh1').feature('map1').selection.set([1 5]);

model.result.table('tbl1').label('Accumulated Probe Table 1');

model.capeopen.label('Thermodynamics Package');

model.component('comp1').variable('var2').label('Plane wave');
model.variable('var3').label('Variables');

model.view('view10').label('PML Zoom 1');
model.view('view10').set('showgrid', false);
model.view('view10').set('locked', true);
model.view('view10').axis.set('xmin', -1.0514452457427979);
model.view('view10').axis.set('xmax', -0.38786137104034424);
model.view('view10').axis.set('ymin', 1.1761935949325562);
model.view('view10').axis.set('ymax', 1.793748378753662);
model.view('view10').axis.set('abstractviewlratio', -0.012861311435699463);
model.view('view10').axis.set('abstractviewrratio', -0.8469653129577637);
model.view('view10').axis.set('abstractviewbratio', 0.8459392189979553);
model.view('view10').axis.set('abstractviewtratio', 0.027573037892580032);
model.view('view10').axis.set('abstractviewxscale', 0.0012785816797986627);
model.view('view10').axis.set('abstractviewyscale', 0.0012785813305526972);
model.component('comp1').view('view1').label('PML Zoom');
model.component('comp1').view('view1').set('showgrid', false);
model.component('comp1').view('view1').set('locked', true);
model.component('comp1').view('view1').axis.set('xmin', -1.0514452457427979);
model.component('comp1').view('view1').axis.set('xmax', -0.38786137104034424);
model.component('comp1').view('view1').axis.set('ymin', 1.1761935949325562);
model.component('comp1').view('view1').axis.set('ymax', 1.793748378753662);
model.component('comp1').view('view1').axis.set('abstractviewlratio', -0.012861311435699463);
model.component('comp1').view('view1').axis.set('abstractviewrratio', -0.8469653129577637);
model.component('comp1').view('view1').axis.set('abstractviewbratio', 0.8459392189979553);
model.component('comp1').view('view1').axis.set('abstractviewtratio', 0.027573037892580032);
model.component('comp1').view('view1').axis.set('abstractviewxscale', 0.0012785816797986627);
model.component('comp1').view('view1').axis.set('abstractviewyscale', 0.0012785813305526972);
model.view('view9').label('Interface ZOOM');
model.view('view9').set('showgrid', false);
model.view('view9').set('locked', true);
model.view('view9').set('showunits', false);
model.view('view9').axis.set('xmin', -0.6167929768562317);
model.view('view9').axis.set('xmax', 1.022958755493164);
model.view('view9').axis.set('ymin', -0.9677807688713074);
model.view('view9').axis.set('ymax', 0.6201892495155334);
model.view('view9').axis.set('abstractviewlratio', 0.09580175578594208);
model.view('view9').axis.set('abstractviewrratio', -0.494260311126709);
model.view('view9').axis.set('abstractviewbratio', 0.2244701385498047);
model.view('view9').axis.set('abstractviewtratio', -0.32670292258262634);
model.view('view9').axis.set('abstractviewxscale', 0.003159444546326995);
model.view('view9').axis.set('abstractviewyscale', 0.0031594443134963512);

model.material('mat1').label('Water');
model.material('mat1').set('family', 'water');
model.material('mat1').propertyGroup('def').func('eta').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('eta').set('pieces', {'273.15' '413.15' '1.3799566804-0.021224019151*T^1+1.3604562827E-4*T^2-4.6454090319E-7*T^3+8.9042735735E-10*T^4-9.0790692686E-13*T^5+3.8457331488E-16*T^6'; '413.15' '553.75' '0.00401235783-2.10746715E-5*T^1+3.85772275E-8*T^2-2.39730284E-11*T^3'});
model.material('mat1').propertyGroup('def').func('Cp').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('Cp').set('pieces', {'273.15' '553.75' '12010.1471-80.4072879*T^1+0.309866854*T^2-5.38186884E-4*T^3+3.62536437E-7*T^4'});
model.material('mat1').propertyGroup('def').func('rho').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('rho').set('pieces', {'273.15' '553.75' '838.466135+1.40050603*T^1-0.0030112376*T^2+3.71822313E-7*T^3'});
model.material('mat1').propertyGroup('def').func('k').set('arg', 'T');
model.material('mat1').propertyGroup('def').func('k').set('pieces', {'273.15' '553.75' '-0.869083936+0.00894880345*T^1-1.58366345E-5*T^2+7.97543259E-9*T^3'});
model.material('mat1').propertyGroup('def').func('cs').set('table', {'273' '1403';  ...
'278' '1427';  ...
'283' '1447';  ...
'293' '1481';  ...
'303' '1507';  ...
'313' '1526';  ...
'323' '1541';  ...
'333' '1552';  ...
'343' '1555';  ...
'353' '1555';  ...
'363' '1550';  ...
'373' '1543'});
model.material('mat1').propertyGroup('def').func('cs').set('interp', 'piecewisecubic');
model.material('mat1').propertyGroup('def').set('dynamicviscosity', 'eta(T[1/K])[Pa*s]');
model.material('mat1').propertyGroup('def').set('ratioofspecificheat', '1.0');
model.material('mat1').propertyGroup('def').set('electricconductivity', {'5.5e-6[S/m]' '0' '0' '0' '5.5e-6[S/m]' '0' '0' '0' '5.5e-6[S/m]'});
model.material('mat1').propertyGroup('def').set('heatcapacity', 'Cp(T[1/K])[J/(kg*K)]');
model.material('mat1').propertyGroup('def').set('density', 'rho(T[1/K])[kg/m^3]');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'k(T[1/K])[W/(m*K)]' '0' '0' '0' 'k(T[1/K])[W/(m*K)]' '0' '0' '0' 'k(T[1/K])[W/(m*K)]'});
model.material('mat1').propertyGroup('def').set('soundspeed', 'cs(T[1/K])[m/s]');
model.material('mat1').propertyGroup('def').addInput('temperature');
model.material('sw1').label('Top layer');
model.material('sw1').feature('mat3').label('Clay');
model.material('sw1').feature('mat3').propertyGroup('def').set('density', '1.5*rho_delta*rho_w');
model.material('sw1').feature('mat3').propertyGroup('def').set('soundspeed', 'c_w*c_delta');
model.material('sw1').feature('mat3').propertyGroup('def').set('porosity', '70[%]');
model.material('sw1').feature('mat4').label('Silt');
model.material('sw1').feature('mat4').propertyGroup('def').set('soundspeed', '1.05*c_w*c_delta');
model.material('sw1').feature('mat4').propertyGroup('def').set('density', '1.7*rho_delta*rho_w');
model.material('sw1').feature('mat4').propertyGroup('def').set('hydraulicpermeability', {'10' '0' '0' '0' '10' '0' '0' '0' '10'});
model.material('sw1').feature('mat4').propertyGroup('def').set('porosity', '55[%]');
model.material('sw1').feature('mat1').label('Sand');
model.material('sw1').feature('mat1').propertyGroup('def').set('soundspeed', '1.1*c_w*c_delta');
model.material('sw1').feature('mat1').propertyGroup('def').set('density', '1.9*rho_delta*rho_w');
model.material('sw1').feature('mat1').propertyGroup('def').set('hydraulicpermeability', {'10' '0' '0' '0' '10' '0' '0' '0' '10'});
model.material('sw1').feature('mat1').propertyGroup('def').set('porosity', '45[%]');
model.material('sw1').feature('mat5').label('Gravel');
model.material('sw1').feature('mat5').propertyGroup('def').set('soundspeed', '1.2*c_w*c_delta');
model.material('sw1').feature('mat5').propertyGroup('def').set('density', '2*rho_delta*rho_w');
model.material('sw1').feature('mat5').propertyGroup('def').set('porosity', '35[%]');
model.material('sw2').label('Bottom Layer');
model.material('sw2').feature('mat4').active(false);
model.material('sw2').feature('mat4').label('Moraine');
model.material('sw2').feature('mat4').propertyGroup('def').set('density', '2.1*rho_w');
model.material('sw2').feature('mat4').propertyGroup('def').set('soundspeed', '1.3*c_w');
model.material('sw2').feature('mat4').propertyGroup('def').set('porosity', '25[%]');
model.material('sw2').feature('mat5').active(false);
model.material('sw2').feature('mat5').label('Chalk');
model.material('sw2').feature('mat5').propertyGroup('def').set('density', '2.2*rho_w');
model.material('sw2').feature('mat5').propertyGroup('def').set('soundspeed', '1.6*c_w');
model.material('sw2').feature('mat6').active(false);
model.material('sw2').feature('mat6').label('Limestone');
model.material('sw2').feature('mat6').propertyGroup('def').set('density', '2.4*rho_w');
model.material('sw2').feature('mat6').propertyGroup('def').set('soundspeed', '2.0*c_w');
model.material('sw2').feature('mat7').label('Basalt');
model.material('sw2').feature('mat7').propertyGroup('def').set('density', '2.7*rho_w');
model.material('sw2').feature('mat7').propertyGroup('def').set('soundspeed', '3.5*c_w');
model.component('comp1').material('matlnk1').label('Top Layer Sediment');
model.component('comp1').material('matlnk1').set('link', 'sw1');
model.component('comp1').material('matlnk2').label('Bottom Layer Sediment');
model.component('comp1').material('matlnk2').set('link', 'sw2');
model.component('comp1').material('matlnk2').set('family', 'steel');

model.component('comp1').cpl('intop1').label('Integration for wavenumber');

model.component('comp1').coordSystem('pml1').set('stretchingType', 'rational');
model.component('comp1').coordSystem('pml2').set('stretchingType', 'rational');

model.component('comp1').physics('acpr').prop('ReferencePressure').set('ReferenceType', 'ReferencePressureWater');
model.component('comp1').physics('acpr').prop('cref').set('cref', 'real(acpr.c_c)');
model.component('comp1').physics('acpr').feature('fpam1').set('rho', 'rho_w');
model.component('comp1').physics('acpr').feature('fpam1').set('c', 'c_w');
model.component('comp1').physics('acpr').feature('bpf1').set('PressureFieldType', 'UserDefined');
model.component('comp1').physics('acpr').feature('bpf1').set('dir', {'kx'; 'ky'; '0'});
model.component('comp1').physics('acpr').feature('bpf1').set('c', 1495);
model.component('comp1').physics('acpr').feature('bpf1').set('p', 'p_inc');
model.component('comp1').physics('acpr').feature('bpf1').set('pamp', 1);
model.component('comp1').physics('acpr').feature('fpam2').set('FluidModel', 'Attenuation');
model.component('comp1').physics('acpr').feature('fpam2').set('alpha1', '.16');
model.component('comp1').physics('acpr').feature('fpam2').set('alpha2', 'alpha');
model.component('comp1').physics('acpr').feature('fpam2').set('AttenuationType', 'dBperm');
model.component('comp1').physics('acpr').feature('fpam2').set('rho', 'rho');
model.component('comp1').physics('acpr').feature('fpam2').set('c', 'c');
model.component('comp1').physics('acpr').feature('pc1').set('PeriodicType', 'Floquet');
model.component('comp1').physics('acpr').feature('pc1').set('kFloquet', {'kx_e'; 'ky_e'; '0'});

model.component('comp1').mesh('mesh1').feature('size').set('hauto', 2);
model.component('comp1').mesh('mesh1').feature('size').set('custom', 'on');
model.component('comp1').mesh('mesh1').feature('size').set('table', 'cfd');
model.component('comp1').mesh('mesh1').feature('size').set('hmax', 'lambda_min/6');
model.component('comp1').mesh('mesh1').feature('size').set('hmin', 'lambda_min/12');
model.component('comp1').mesh('mesh1').feature('size').set('hgrad', 1.08);
model.component('comp1').mesh('mesh1').run;

model.component('comp1').physics('acpr').feature('fpam1').set('rho_mat', 'userdef');
model.component('comp1').physics('acpr').feature('fpam1').set('c_mat', 'userdef');

model.study.create('std2');
model.study('std2').create('param', 'Parametric');
model.study('std2').create('matsw', 'MaterialSweep');
model.study('std2').create('freq', 'Frequency');
model.study('std2').feature('freq').set('useadvanceddisable', true);
model.study.create('std3');
model.study('std3').create('matsw', 'MaterialSweep');
model.study('std3').create('freq', 'Frequency');
model.study('std3').feature('freq').set('activate', {'acpr' 'on'});
model.study.create('std4');
model.study('std4').create('freq', 'Frequency');
model.study('std4').feature('freq').set('activate', {'acpr' 'on'});

model.sol.create('sol4');
model.sol('sol4').study('std2');
model.sol('sol4').attach('std2');
model.sol('sol4').create('st1', 'StudyStep');
model.sol('sol4').create('v1', 'Variables');
model.sol('sol4').create('s1', 'Stationary');
model.sol('sol4').feature('s1').create('p1', 'Parametric');
model.sol('sol4').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol4').feature('s1').feature.remove('fcDef');
model.sol.create('sol6');
model.sol('sol6').study('std3');
model.sol('sol6').attach('std3');
model.sol('sol6').create('st1', 'StudyStep');
model.sol('sol6').create('v1', 'Variables');
model.sol('sol6').create('s1', 'Stationary');
model.sol('sol6').feature('s1').create('p1', 'Parametric');
model.sol('sol6').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol6').feature('s1').create('pDef', 'Parametric');
model.sol('sol6').feature('s1').feature.remove('fcDef');
model.sol.create('sol7');
model.sol('sol7').study('std3');
model.sol('sol7').label('Parametric Solutions 2');
model.sol.create('sol43');
model.sol('sol43').study('std4');
model.sol('sol43').attach('std4');
model.sol('sol43').create('st1', 'StudyStep');
model.sol('sol43').create('v1', 'Variables');
model.sol('sol43').create('s1', 'Stationary');
model.sol('sol43').feature('s1').create('p1', 'Parametric');
model.sol('sol43').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol43').feature('s1').feature.remove('fcDef');
model.sol.create('sol46');
model.sol('sol46').study('std2');
model.sol('sol46').label('Parametric Solutions 3');

model.batch.create('pm3', 'MaterialSweep');
model.batch.create('pm7', 'MaterialSweep');
model.batch.create('p1', 'Parametric');
model.batch('pm3').create('so1', 'Solutionseq');
model.batch('pm3').create('ex1', 'Exportseq');
model.batch('pm3').create('ex2', 'Exportseq');
model.batch('pm7').create('so1', 'Solutionseq');
model.batch('pm7').create('ex1', 'Exportseq');
model.batch('p1').create('jo1', 'Jobseq');
model.batch('p1').create('ex1', 'Exportseq');
model.batch('pm3').study('std3');
model.batch('pm7').study('std2');
model.batch('p1').study('std2');

model.result.dataset.create('mesh1', 'Mesh');
model.result.dataset.create('dset17', 'Solution');
model.result.dataset.create('dset18', 'Solution');
model.result.dataset('dset17').set('solution', 'sol46');
model.result.dataset.remove('dset1');
model.result.dataset.remove('dset2');
model.result.dataset.remove('dset3');
model.result.dataset.remove('dset4');
model.result.dataset.remove('dset5');
model.result.create('pg3', 'PlotGroup2D');
model.result.create('pg20', 'PlotGroup2D');
model.result.create('pg21', 'PlotGroup2D');
model.result.create('pg22', 'PlotGroup2D');
model.result.create('pg23', 'PlotGroup2D');
model.result.create('pg24', 'PlotGroup2D');
model.result.create('pg25', 'PlotGroup2D');
model.result('pg3').create('surf1', 'Surface');
model.result('pg20').create('surf1', 'Surface');
model.result('pg21').set('data', 'mesh1');
model.result('pg21').create('mesh1', 'Mesh');
model.result('pg21').create('line1', 'Line');
model.result('pg21').feature('line1').set('data', 'dset17');
model.result('pg22').set('data', 'mesh1');
model.result('pg22').create('mesh1', 'Mesh');
model.result('pg22').create('line1', 'Line');
model.result('pg22').feature('line1').set('data', 'dset17');
model.result('pg23').set('data', 'mesh1');
model.result('pg23').create('mesh1', 'Mesh');
model.result('pg23').create('line1', 'Line');
model.result('pg23').feature('line1').set('data', 'dset17');
model.result('pg24').set('data', 'dset18');
model.result('pg24').create('surf1', 'Surface');
model.result('pg25').set('data', 'dset18');
model.result('pg25').create('surf1', 'Surface');
model.result.export.create('data5', 'Data');
model.result.export.create('data6', 'Data');
model.result.export.create('data7', 'Data');
model.result.report.create('rpt1', 'Report');
model.result.report('rpt1').create('tp1', 'TitlePage');
model.result.report('rpt1').create('toc1', 'TableOfContents');
model.result.report('rpt1').create('sec1', 'Section');
model.result.report('rpt1').create('sec2', 'Section');
model.result.report('rpt1').create('sec3', 'Section');
model.result.report('rpt1').create('sec6', 'Section');
model.result.report('rpt1').feature('sec1').create('root1', 'Model');
model.result.report('rpt1').feature('sec1').create('sec1', 'Section');
model.result.report('rpt1').feature('sec1').create('sec3', 'Section');
model.result.report('rpt1').feature('sec1').create('sec4', 'Section');
model.result.report('rpt1').feature('sec1').feature('sec1').create('param1', 'Parameter');
model.result.report('rpt1').feature('sec1').feature('sec3').create('sec1', 'Section');
model.result.report('rpt1').feature('sec1').feature('sec3').feature('sec1').create('func1', 'Functions');
model.result.report('rpt1').feature('sec1').feature('sec4').create('sec1', 'Section');
model.result.report('rpt1').feature('sec1').feature('sec4').create('sec2', 'Section');
model.result.report('rpt1').feature('sec1').feature('sec4').create('sec3', 'Section');
model.result.report('rpt1').feature('sec1').feature('sec4').feature('sec1').create('mat1', 'Material');
model.result.report('rpt1').feature('sec1').feature('sec4').feature('sec2').create('mat1', 'Material');
model.result.report('rpt1').feature('sec1').feature('sec4').feature('sec3').create('mat1', 'Material');
model.result.report('rpt1').feature('sec2').create('comp1', 'ModelNode');
model.result.report('rpt1').feature('sec2').create('sec1', 'Section');
model.result.report('rpt1').feature('sec2').create('sec2', 'Section');
model.result.report('rpt1').feature('sec2').create('sec4', 'Section');
model.result.report('rpt1').feature('sec2').create('sec5', 'Section');
model.result.report('rpt1').feature('sec2').feature('sec1').create('sec6', 'Section');
model.result.report('rpt1').feature('sec2').feature('sec1').feature('sec6').create('sec1', 'Section');
model.result.report('rpt1').feature('sec2').feature('sec1').feature('sec6').create('sec2', 'Section');
model.result.report('rpt1').feature('sec2').feature('sec1').feature('sec6').feature('sec1').create('pml1', 'PML');
model.result.report('rpt1').feature('sec2').feature('sec1').feature('sec6').feature('sec2').create('pml1', 'PML');
model.result.report('rpt1').feature('sec2').feature('sec2').create('geom1', 'Geometry');
model.result.report('rpt1').feature('sec2').feature('sec4').create('sec3', 'Section');
model.result.report('rpt1').feature('sec2').feature('sec4').create('sec1', 'Section');
model.result.report('rpt1').feature('sec2').feature('sec4').create('phys1', 'Physics');
model.result.report('rpt1').feature('sec2').feature('sec4').feature('sec3').create('sec1', 'Section');
model.result.report('rpt1').feature('sec2').feature('sec4').feature('sec3').feature('sec1').create('cpl1', 'ComponentCoupling');
model.result.report('rpt1').feature('sec2').feature('sec4').feature('sec1').create('sec1', 'Section');
model.result.report('rpt1').feature('sec2').feature('sec4').feature('sec1').feature('sec1').create('var1', 'Variables');
model.result.report('rpt1').feature('sec2').feature('sec5').create('mesh1', 'Mesh');
model.result.report('rpt1').feature('sec2').feature('sec5').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec2').feature('sec5').create('pg2', 'PlotGroup');
model.result.report('rpt1').feature('sec3').create('std1', 'Study');
model.result.report('rpt1').feature('sec6').create('sec3', 'Section');
model.result.report('rpt1').feature('sec6').feature('sec3').create('sec1', 'Section');
model.result.report('rpt1').feature('sec6').feature('sec3').create('sec2', 'Section');
model.result.report('rpt1').feature('sec6').feature('sec3').feature('sec1').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec6').feature('sec3').feature('sec2').create('pg1', 'PlotGroup');

model.study('std2').label('Generate Library');
model.study('std2').feature('param').set('pname', {'rho_delta'});
model.study('std2').feature('param').set('plistarr', {'.9, 1.1'});
model.study('std2').feature('param').set('punit', {''});
model.study('std2').feature('matsw').set('pname', {'matsw.sw1'});
model.study('std2').feature('matsw').set('plistarr', {'1,4'});
model.study('std2').feature('matsw').set('pcase', {'user'});
model.study('std2').feature('matsw').set('useaccumtable', true);
model.study('std2').feature('freq').set('plist', 'f0');
model.study('std3').label('Generate Signals');
model.study('std3').feature('matsw').active(false);
model.study('std3').feature('matsw').set('pname', {'matsw.sw1'});
model.study('std3').feature('matsw').set('plistarr', {'range(1,1,4)'});
model.study('std3').feature('matsw').set('pcase', {'all'});
model.study('std3').feature('freq').set('plist', 'f0');
model.study('std3').feature('freq').set('discretization', {'acpr' 'physics'});
model.study('std4').label('Test Signal');
model.study('std4').feature('freq').set('plist', 'f0');
model.study('std4').feature('freq').set('discretization', {'acpr' 'physics'});

model.sol('sol4').attach('std2');
model.sol('sol4').feature('v1').set('clistctrl', {'p1'});
model.sol('sol4').feature('v1').set('cname', {'freq'});
model.sol('sol4').feature('v1').set('clist', {'f0'});
model.sol('sol4').feature('s1').set('probesel', 'none');
model.sol('sol4').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol4').feature('s1').feature('p1').set('control', 'user');
model.sol('sol4').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol4').feature('s1').feature('p1').set('plistarr', {'f0'});
model.sol('sol4').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol4').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol4').feature('s1').feature('p1').set('preusesol', 'auto');
model.sol('sol4').feature('s1').feature('p1').set('uselsqdata', false);
model.sol('sol4').runAll;
model.sol('sol6').attach('std3');
model.sol('sol6').feature('v1').set('clistctrl', {'p1'});
model.sol('sol6').feature('v1').set('cname', {'freq'});
model.sol('sol6').feature('v1').set('clist', {'f0'});
model.sol('sol6').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol6').feature('s1').feature('p1').active(true);
model.sol('sol6').feature('s1').feature('p1').set('control', 'user');
model.sol('sol6').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol6').feature('s1').feature('p1').set('plistarr', {'f0'});
model.sol('sol6').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol6').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol6').feature('s1').feature('p1').set('preusesol', 'auto');
model.sol('sol6').feature('s1').feature('pDef').set('control', 'user');
model.sol('sol6').feature('s1').feature('pDef').set('pname', {'freq'});
model.sol('sol6').feature('s1').feature('pDef').set('plistarr', {'f0'});
model.sol('sol6').feature('s1').feature('pDef').set('punit', {'Hz'});
model.sol('sol6').feature('s1').feature('pDef').set('pcontinuationmode', 'no');
model.sol('sol6').feature('s1').feature('pDef').set('preusesol', 'auto');
model.sol('sol6').feature('s1').feature('pDef').set('uselsqdata', false);
model.sol('sol6').runAll;
model.sol('sol43').attach('std4');
model.sol('sol43').feature('v1').set('clistctrl', {'p1'});
model.sol('sol43').feature('v1').set('cname', {'freq'});
model.sol('sol43').feature('v1').set('clist', {'f0'});
model.sol('sol43').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol43').feature('s1').feature('p1').set('control', 'user');
model.sol('sol43').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol43').feature('s1').feature('p1').set('plistarr', {'f0'});
model.sol('sol43').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol43').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol43').feature('s1').feature('p1').set('preusesol', 'auto');
model.sol('sol43').runAll;

model.batch('pm3').set('pname', {'matsw.sw1' 'matsw.sw2'});
model.batch('pm3').set('plistarr', {'range(1,1,3)' 'range(1,1,4)'});
model.batch('pm3').set('err', true);
model.batch('pm3').feature('so1').set('seq', 'sol6');
model.batch('pm3').feature('so1').set('store', true);
model.batch('pm3').feature('so1').set('psol', 'sol7');
model.batch('pm3').feature('so1').set('param', {'"matsw.sw1","1","matsw.sw2","1"' '"matsw.sw1","1","matsw.sw2","2"' '"matsw.sw1","1","matsw.sw2","3"' '"matsw.sw1","1","matsw.sw2","4"' '"matsw.sw1","2","matsw.sw2","1"' '"matsw.sw1","2","matsw.sw2","2"' '"matsw.sw1","2","matsw.sw2","3"' '"matsw.sw1","2","matsw.sw2","4"' '"matsw.sw1","3","matsw.sw2","1"'});
model.batch('pm3').feature('ex1').set('param', {'"matsw.sw1","1","matsw.sw2","1"' '"matsw.sw1","1","matsw.sw2","1"' '"matsw.sw1","1","matsw.sw2","2"' '"matsw.sw1","1","matsw.sw2","2"' '"matsw.sw1","1","matsw.sw2","3"' '"matsw.sw1","1","matsw.sw2","3"' '"matsw.sw1","1","matsw.sw2","4"' '"matsw.sw1","1","matsw.sw2","4"' '"matsw.sw1","2","matsw.sw2","1"' '"matsw.sw1","2","matsw.sw2","1"'  ...
'"matsw.sw1","2","matsw.sw2","2"' '"matsw.sw1","2","matsw.sw2","2"' '"matsw.sw1","2","matsw.sw2","3"' '"matsw.sw1","2","matsw.sw2","3"' '"matsw.sw1","2","matsw.sw2","4"' '"matsw.sw1","2","matsw.sw2","4"' '"matsw.sw1","3","matsw.sw2","1"' '"matsw.sw1","3","matsw.sw2","1"'});
model.batch('pm3').feature('ex2').set('param', {'"matsw.sw1","1","matsw.sw2","1"' '"matsw.sw1","1","matsw.sw2","1"' '"matsw.sw1","1","matsw.sw2","2"' '"matsw.sw1","1","matsw.sw2","2"' '"matsw.sw1","1","matsw.sw2","3"' '"matsw.sw1","1","matsw.sw2","3"' '"matsw.sw1","1","matsw.sw2","4"' '"matsw.sw1","1","matsw.sw2","4"' '"matsw.sw1","2","matsw.sw2","1"' '"matsw.sw1","2","matsw.sw2","1"'  ...
'"matsw.sw1","2","matsw.sw2","2"' '"matsw.sw1","2","matsw.sw2","2"' '"matsw.sw1","2","matsw.sw2","3"' '"matsw.sw1","2","matsw.sw2","3"' '"matsw.sw1","2","matsw.sw2","4"' '"matsw.sw1","2","matsw.sw2","4"' '"matsw.sw1","3","matsw.sw2","1"' '"matsw.sw1","3","matsw.sw2","1"'});
model.batch('pm3').attach('std3');
model.batch('pm3').run;
model.batch('pm7').set('pname', {'matsw.sw1'});
model.batch('pm7').set('plistarr', {'1,4'});
model.batch('pm7').set('useaccumtable', true);
model.batch('pm7').set('accumtable', 'tbl1');
model.batch('pm7').set('err', true);
model.batch('pm7').feature('so1').set('seq', 'sol4');
model.batch('pm7').feature('so1').set('store', true);
model.batch('pm7').feature('so1').set('psol', 'sol46');
model.batch('pm7').feature('so1').set('param', {'"rho_delta","0.9","matsw.sw1","1"' '"rho_delta","0.9","matsw.sw1","4"' '"rho_delta","1.1","matsw.sw1","1"' '"rho_delta","1.1","matsw.sw1","4"'});
model.batch('pm7').feature('ex1').set('paramfilename', 'index');
model.batch('pm7').feature('ex1').set('param', {'"rho_delta","0.9","matsw.sw1","1"' '"rho_delta","0.9","matsw.sw1","1"' '"rho_delta","0.9","matsw.sw1","1"' '"rho_delta","0.9","matsw.sw1","4"' '"rho_delta","0.9","matsw.sw1","4"' '"rho_delta","0.9","matsw.sw1","4"' '"rho_delta","1.1","matsw.sw1","1"' '"rho_delta","1.1","matsw.sw1","1"' '"rho_delta","1.1","matsw.sw1","1"' '"rho_delta","1.1","matsw.sw1","4"'  ...
'"rho_delta","1.1","matsw.sw1","4"' '"rho_delta","1.1","matsw.sw1","4"'});
model.batch('pm7').attach('std2');
model.batch('pm7').run;
model.batch('p1').set('control', 'param');
model.batch('p1').set('pname', {'rho_delta'});
model.batch('p1').set('plistarr', {'.9, 1.1'});
model.batch('p1').set('punit', {''});
model.batch('p1').set('useaccumtable', true);
model.batch('p1').set('err', true);
model.batch('p1').feature('jo1').set('seq', 'pm7');
model.batch('p1').feature('ex1').active(false);
model.batch('p1').feature('ex1').set('param', {'"c_delta","0.9"' '"c_delta","0.9"' '"c_delta","0.9"' '"c_delta","0.95"' '"c_delta","0.95"' '"c_delta","0.95"' '"c_delta","1.05"' '"c_delta","1.05"' '"c_delta","1.05"' '"c_delta","1.1"'  ...
'"c_delta","1.1"' '"c_delta","1.1"'});
model.batch('p1').attach('std2');
model.batch('p1').run;

model.result('pg3').label('Acoustic Pressure (acpr)');
model.result('pg3').set('looplevel', [1 1 1]);
model.result('pg3').feature('surf1').set('smooth', 'internal');
model.result('pg3').feature('surf1').set('resolution', 'normal');
model.result('pg20').label('Sound Pressure Level (acpr)');
model.result('pg20').set('looplevel', [1 1 1]);
model.result('pg20').feature('surf1').set('expr', 'acpr.Lp');
model.result('pg20').feature('surf1').set('unit', 'dB');
model.result('pg20').feature('surf1').set('descr', 'Sound pressure level');
model.result('pg20').feature('surf1').set('resolution', 'normal');
model.result('pg21').label('Mesh Quality Interface');
model.result('pg21').set('view', 'view9');
model.result('pg21').set('edges', false);
model.result('pg21').feature('mesh1').set('inheritdeformscale', false);
model.result('pg21').feature('line1').set('looplevel', [1 1 1]);
model.result('pg21').feature('line1').set('expr', 'interface(x)');
model.result('pg21').feature('line1').set('unit', '');
model.result('pg21').feature('line1').set('descr', 'interface(x)');
model.result('pg21').feature('line1').set('linetype', 'tube');
model.result('pg21').feature('line1').set('tuberadiusscale', 0.005);
model.result('pg21').feature('line1').set('tuberadiusscaleactive', true);
model.result('pg21').feature('line1').set('coloring', 'uniform');
model.result('pg21').feature('line1').set('color', 'black');
model.result('pg21').feature('line1').set('inheritplot', 'mesh1');
model.result('pg21').feature('line1').set('inheritcolor', false);
model.result('pg21').feature('line1').set('inheritrange', false);
model.result('pg21').feature('line1').set('inheritdeformscale', false);
model.result('pg21').feature('line1').set('inheritheightscale', false);
model.result('pg21').feature('line1').set('inherittubescale', false);
model.result('pg21').feature('line1').set('resolution', 'normal');
model.result('pg22').label('Mesh Quality PML');
model.result('pg22').set('view', 'view1');
model.result('pg22').set('edges', false);
model.result('pg22').feature('mesh1').set('inheritdeformscale', false);
model.result('pg22').feature('line1').set('looplevel', [1 1 1]);
model.result('pg22').feature('line1').set('expr', 'interface(x)');
model.result('pg22').feature('line1').set('unit', '');
model.result('pg22').feature('line1').set('descr', 'interface(x)');
model.result('pg22').feature('line1').set('linetype', 'tube');
model.result('pg22').feature('line1').set('tuberadiusscale', 0.005);
model.result('pg22').feature('line1').set('tuberadiusscaleactive', true);
model.result('pg22').feature('line1').set('coloring', 'uniform');
model.result('pg22').feature('line1').set('color', 'black');
model.result('pg22').feature('line1').set('inheritplot', 'mesh1');
model.result('pg22').feature('line1').set('inheritcolor', false);
model.result('pg22').feature('line1').set('inheritrange', false);
model.result('pg22').feature('line1').set('inheritdeformscale', false);
model.result('pg22').feature('line1').set('inheritheightscale', false);
model.result('pg22').feature('line1').set('inherittubescale', false);
model.result('pg22').feature('line1').set('resolution', 'normal');
model.result('pg23').label('Mesh Quality Layers');
model.result('pg23').set('view', 'view9');
model.result('pg23').set('edges', false);
model.result('pg23').feature('mesh1').set('inheritdeformscale', false);
model.result('pg23').feature('line1').set('looplevel', [1 1 1]);
model.result('pg23').feature('line1').set('expr', 'interface(x)');
model.result('pg23').feature('line1').set('unit', '');
model.result('pg23').feature('line1').set('descr', 'interface(x)');
model.result('pg23').feature('line1').set('linetype', 'tube');
model.result('pg23').feature('line1').set('tuberadiusscale', 0.005);
model.result('pg23').feature('line1').set('tuberadiusscaleactive', true);
model.result('pg23').feature('line1').set('coloring', 'uniform');
model.result('pg23').feature('line1').set('color', 'black');
model.result('pg23').feature('line1').set('inheritplot', 'mesh1');
model.result('pg23').feature('line1').set('inheritcolor', false);
model.result('pg23').feature('line1').set('inheritrange', false);
model.result('pg23').feature('line1').set('inheritdeformscale', false);
model.result('pg23').feature('line1').set('inheritheightscale', false);
model.result('pg23').feature('line1').set('inherittubescale', false);
model.result('pg23').feature('line1').set('resolution', 'normal');
model.result('pg24').label('Acoustic Pressure (acpr) 1');
model.result('pg24').feature('surf1').set('resolution', 'normal');
model.result('pg25').label('Sound Pressure Level (acpr) 1');
model.result('pg25').feature('surf1').set('expr', 'acpr.Lp');
model.result('pg25').feature('surf1').set('unit', 'dB');
model.result('pg25').feature('surf1').set('descr', 'Sound pressure level');
model.result('pg25').feature('surf1').set('resolution', 'normal');
model.result.export('data5').label('Solutions');
model.result.export('data5').set('data', 'dset18');
model.result.export('data5').set('looplevelinput', {'all'});
model.result.export('data5').set('expr', {'real(acpr.p_s)' 'imag(acpr.p_s)' 'real(p_inc)' 'imag(p_inc)'});
model.result.export('data5').set('unit', {'Pa' 'Pa' 'Pa' 'Pa'});
model.result.export('data5').set('descr', {'' '' '' ''});
model.result.export('data5').set('filename', '/Users/christinafrederick/Google Drive/GitHub/Sonar 2018/twoLayer-rho_delta/txt/signal.txt');
model.result.export('data5').set('location', 'grid');
model.result.export('data5').set('gridx2', 'range(-0.5,(1/511),width+.5)');
model.result.export('data5').set('gridy2', 'range(.8,lambda_min/20, 1.2)');
model.result.export('data6').label('Parameters');
model.result.export('data6').set('data', 'dset18');
model.result.export('data6').set('looplevelinput', {'all'});
model.result.export('data6').set('expr', {'f0' 'width' 'k0' 'lambda_min' 'layer_thickness' 'height' 'theta'});
model.result.export('data6').set('unit', {'1/s' 'm' 'rad/m' 'm' '' '' ''});
model.result.export('data6').set('descr', {'Frequency' 'Width' 'WaveNumber' 'MinimalWavelength' 'Thickness' 'Height' 'IncidentAngle'});
model.result.export('data6').set('filename', '/Users/christinafrederick/Google Drive/GitHub/Sonar 2018/twoLayer-rho_delta/txt/parameters/parameters.txt');
model.result.export('data6').set('sdim', 'global');
model.result.export('data7').label('Functions');
model.result.export('data7').set('data', 'dset18');
model.result.export('data7').set('looplevelinput', {'all'});
model.result.export('data7').set('expr', {'acpr.c' 'acpr.rho' 'interface(x)'});
model.result.export('data7').set('unit', {'m/s' 'kg/m^3' ''});
model.result.export('data7').set('descr', {'SoundSpeed' 'Density' 'Interface'});
model.result.export('data7').set('filename', '/Users/christinafrederick/Google Drive/GitHub/Sonar 2018/twoLayer-rho_delta/txt/parameters/functions.txt');
model.result.export('data7').set('location', 'grid');
model.result.export('data7').set('gridx2', 'range(-0.5,(1/511),width+.5)');
model.result.export('data7').set('gridy2', '-Hsediment*.75, - layer_thickness/2');
model.result.report('rpt1').set('level', 'brief');
model.result.report('rpt1').set('filename', '/Users/christinafrederick/Google Drive/GitHub/NN-Classification-with-Simulated-Sonar-Data/COMSOL/report.html');
model.result.report('rpt1').set('imagegeneration', 'suppress');
model.result.report('rpt1').feature('tp1').label('2D Underwater acoustic response from a rough two layer seafloor');
model.result.report('rpt1').feature('tp1').set('titleimage', 'pg3');
model.result.report('rpt1').feature('tp1').set('author', 'Christina Frederick');
model.result.report('rpt1').feature('tp1').set('company', 'NJIT');
model.result.report('rpt1').feature('tp1').set('version', '1');
model.result.report('rpt1').feature('tp1').set('includeversion', false);
model.result.report('rpt1').feature('tp1').set('summary', 'Forward model in COMSOL used to generate Helmholtz Solutions');
model.result.report('rpt1').feature('tp1').set('includeacknowledgment', false);
model.result.report('rpt1').feature('toc1').active(false);
model.result.report('rpt1').feature('toc1').set('toc', ['1.          Global Definitions\n1.1.            Parameters\n1.2.            Functions\n1.3.            Materials\n2.          Component 1\n2.1.            Definitions\n2.2.            Geometry 1\n2.3.            Pressure Acoustics, Frequency Domain\n2.4.            Mesh 1\n3.          Generate Library\n4.          Results\n4.1.            Plot Groups\n']);
model.result.report('rpt1').feature('sec1').label('Global Definitions');
model.result.report('rpt1').feature('sec1').feature('root1').set('includeauthor', false);
model.result.report('rpt1').feature('sec1').feature('root1').set('includedatecreated', false);
model.result.report('rpt1').feature('sec1').feature('root1').set('includeversion', false);
model.result.report('rpt1').feature('sec1').feature('root1').set('includename', false);
model.result.report('rpt1').feature('sec1').feature('root1').set('includepath', false);
model.result.report('rpt1').feature('sec1').feature('sec1').label('Parameters 1');
model.result.report('rpt1').feature('sec1').feature('sec1').set('source', 'firstchild');
model.result.report('rpt1').feature('sec1').feature('sec3').label('Functions');
model.result.report('rpt1').feature('sec1').feature('sec3').feature('sec1').label('Interface 1');
model.result.report('rpt1').feature('sec1').feature('sec3').feature('sec1').set('source', 'firstchild');
model.result.report('rpt1').feature('sec1').feature('sec3').feature('sec1').feature('func1').set('includesettings', false);
model.result.report('rpt1').feature('sec1').feature('sec4').label('Materials');
model.result.report('rpt1').feature('sec1').feature('sec4').feature('sec1').label('Water');
model.result.report('rpt1').feature('sec1').feature('sec4').feature('sec1').set('source', 'firstchild');
model.result.report('rpt1').feature('sec1').feature('sec4').feature('sec1').feature('mat1').set('includeimage', false);
model.result.report('rpt1').feature('sec1').feature('sec4').feature('sec1').feature('mat1').set('includeselection', false);
model.result.report('rpt1').feature('sec1').feature('sec4').feature('sec2').label('Top layer');
model.result.report('rpt1').feature('sec1').feature('sec4').feature('sec2').set('source', 'firstchild');
model.result.report('rpt1').feature('sec1').feature('sec4').feature('sec2').feature('mat1').set('noderef', 'sw1');
model.result.report('rpt1').feature('sec1').feature('sec4').feature('sec2').feature('mat1').set('includeimage', false);
model.result.report('rpt1').feature('sec1').feature('sec4').feature('sec2').feature('mat1').set('includesettings', false);
model.result.report('rpt1').feature('sec1').feature('sec4').feature('sec3').label('Bottom Layer');
model.result.report('rpt1').feature('sec1').feature('sec4').feature('sec3').set('source', 'firstchild');
model.result.report('rpt1').feature('sec1').feature('sec4').feature('sec3').feature('mat1').set('noderef', 'sw2');
model.result.report('rpt1').feature('sec1').feature('sec4').feature('sec3').feature('mat1').set('includeimage', false);
model.result.report('rpt1').feature('sec1').feature('sec4').feature('sec3').feature('mat1').set('includeselection', false);
model.result.report('rpt1').feature('sec2').label('Component 1');
model.result.report('rpt1').feature('sec2').feature('comp1').set('includeunitsystem', false);
model.result.report('rpt1').feature('sec2').feature('sec1').label('Definitions');
model.result.report('rpt1').feature('sec2').feature('sec1').feature('sec6').label('Domain Properties');
model.result.report('rpt1').feature('sec2').feature('sec1').feature('sec6').feature('sec1').label('Perfectly Matched Layer 1');
model.result.report('rpt1').feature('sec2').feature('sec1').feature('sec6').feature('sec1').set('source', 'firstchild');
model.result.report('rpt1').feature('sec2').feature('sec1').feature('sec6').feature('sec1').feature('pml1').set('includesettings', false);
model.result.report('rpt1').feature('sec2').feature('sec1').feature('sec6').feature('sec2').label('Perfectly Matched Layer 2');
model.result.report('rpt1').feature('sec2').feature('sec1').feature('sec6').feature('sec2').set('source', 'firstchild');
model.result.report('rpt1').feature('sec2').feature('sec1').feature('sec6').feature('sec2').feature('pml1').set('noderef', 'pml2');
model.result.report('rpt1').feature('sec2').feature('sec1').feature('sec6').feature('sec2').feature('pml1').set('includesettings', false);
model.result.report('rpt1').feature('sec2').feature('sec2').label('Geometry 1');
model.result.report('rpt1').feature('sec2').feature('sec2').set('source', 'firstchild');
model.result.report('rpt1').feature('sec2').feature('sec2').feature('geom1').set('includestats', false);
model.result.report('rpt1').feature('sec2').feature('sec2').feature('geom1').set('children', {'pc2' 'off'; 'pc3' 'off'; 'r1' 'off'; 'fin' 'off'});
model.result.report('rpt1').feature('sec2').feature('sec4').label('Pressure Acoustics, Frequency Domain');
model.result.report('rpt1').feature('sec2').feature('sec4').set('source', 'firstchild');
model.result.report('rpt1').feature('sec2').feature('sec4').feature('sec3').label('Component Couplings');
model.result.report('rpt1').feature('sec2').feature('sec4').feature('sec3').feature('sec1').label('Integration for wavenumber');
model.result.report('rpt1').feature('sec2').feature('sec4').feature('sec3').feature('sec1').set('source', 'firstchild');
model.result.report('rpt1').feature('sec2').feature('sec4').feature('sec1').label('Variables');
model.result.report('rpt1').feature('sec2').feature('sec4').feature('sec1').feature('sec1').label('Plane wave');
model.result.report('rpt1').feature('sec2').feature('sec4').feature('sec1').feature('sec1').set('source', 'firstchild');
model.result.report('rpt1').feature('sec2').feature('sec4').feature('phys1').set('includeusedproducts', false);
model.result.report('rpt1').feature('sec2').feature('sec4').feature('phys1').set('includeselection', false);
model.result.report('rpt1').feature('sec2').feature('sec4').feature('phys1').set('includesettings', false);
model.result.report('rpt1').feature('sec2').feature('sec4').feature('phys1').set('children', {'fpam1' 'off' 'off';  ...
'shb1' 'on' 'on';  ...
'init1' 'off' 'off';  ...
'bpf1' 'on' 'on';  ...
'fpam2' 'on' 'on';  ...
'pc1' 'on' 'on'});
model.result.report('rpt1').feature('sec2').feature('sec4').feature('phys1').set('includevariables', false);
model.result.report('rpt1').feature('sec2').feature('sec4').feature('phys1').set('includeshapefunctions', false);
model.result.report('rpt1').feature('sec2').feature('sec4').feature('phys1').set('includeweakexpressions', false);
model.result.report('rpt1').feature('sec2').feature('sec4').feature('phys1').set('includeconstraints', false);
model.result.report('rpt1').feature('sec2').feature('sec5').label('Mesh 1');
model.result.report('rpt1').feature('sec2').feature('sec5').set('source', 'firstchild');
model.result.report('rpt1').feature('sec2').feature('sec5').feature('mesh1').set('includeimage', false);
model.result.report('rpt1').feature('sec2').feature('sec5').feature('mesh1').set('includestats', true);
model.result.report('rpt1').feature('sec2').feature('sec5').feature('pg1').set('commentssource', 'custom');
model.result.report('rpt1').feature('sec2').feature('sec5').feature('pg1').set('comments', 'Mesh quality near interface');
model.result.report('rpt1').feature('sec2').feature('sec5').feature('pg1').set('noderef', 'pg23');
model.result.report('rpt1').feature('sec2').feature('sec5').feature('pg2').set('commentssource', 'custom');
model.result.report('rpt1').feature('sec2').feature('sec5').feature('pg2').set('comments', 'Mesh quality near PML');
model.result.report('rpt1').feature('sec2').feature('sec5').feature('pg2').set('noderef', 'pg22');
model.result.report('rpt1').feature('sec3').label('Generate Library');
model.result.report('rpt1').feature('sec3').feature('std1').set('children', {'param' 'on'; 'matsw' 'on'; 'freq' 'on'});
model.result.report('rpt1').feature('sec6').label('Results');
model.result.report('rpt1').feature('sec6').feature('sec3').label('Plot Groups');
model.result.report('rpt1').feature('sec6').feature('sec3').feature('sec1').label('Acoustic Pressure (acpr)');
model.result.report('rpt1').feature('sec6').feature('sec3').feature('sec1').set('source', 'firstchild');
model.result.report('rpt1').feature('sec6').feature('sec3').feature('sec1').feature('pg1').set('zoomextents', true);
model.result.report('rpt1').feature('sec6').feature('sec3').feature('sec2').label('Sound Pressure Level (acpr)');
model.result.report('rpt1').feature('sec6').feature('sec3').feature('sec2').set('source', 'firstchild');
model.result.report('rpt1').feature('sec6').feature('sec3').feature('sec2').feature('pg1').set('noderef', 'pg20');
model.result.report('rpt1').feature('sec6').feature('sec3').feature('sec2').feature('pg1').set('zoomextents', true);

model.study('std2').feature('param').setIndex('plistarr', '.9, .95, 1.05, 1.1', 0);

model.material('sw1').feature('mat3').propertyGroup('def').set('soundspeed', {'c_clay'});
model.material('sw1').feature('mat3').propertyGroup('def').set('density', {'rho_clay'});
model.material('sw1').feature('mat5').propertyGroup('def').set('soundspeed', {'c_gravel'});
model.material('sw1').feature('mat5').propertyGroup('def').set('density', {'rho_gravel'});

model.param.rename('c_delta', 'c_clay');
model.param.set('c_clay', '1500');
model.param.set('c_gravel', '1500 [m/s]');
model.param.set('c_clay', '1500[m/s]');
model.param.set('c_gravel', '1500[m/s]');
model.param.set('rho_clay', '1500 [kg/m^3]');
model.param.remove('rho_delta');
model.param.set('rho_gravel', '2000[kg/m^3]');

model.label('generic-cell_modified_mat.mph');

model.param.remove('c_gravel');
model.param.remove('c_clay');
model.param.remove('rho_gravel');
model.param.rename('rho_clay', 'rho_delta');
model.param.set('rho_delta', '0');
model.param.set('c_delta', '0');

model.study('std2').feature('param').setIndex('pname', 'width', 0);
model.study('std2').feature('param').setIndex('plistarr', '', 0);
model.study('std2').feature('param').setIndex('punit', '', 0);
model.study('std2').feature('param').setIndex('pname', 'width', 0);
model.study('std2').feature('param').setIndex('plistarr', '', 0);
model.study('std2').feature('param').setIndex('punit', '', 0);

model.material('sw1').feature('mat3').propertyGroup('def').set('soundspeed', {'c_w+c_delta'});
model.material('sw1').feature('mat3').propertyGroup('def').set('density', {'1.5*rho_w+rho_delta'});
model.material('sw1').feature('mat5').propertyGroup('def').set('soundspeed', {'1.2*c_w+c_delta'});
model.material('sw1').feature('mat5').propertyGroup('def').set('density', {'2*rho_w+rho_delta'});

model.study('std2').feature('param').setIndex('pname', 'rho_delta', 0);
model.study('std2').feature('param').setIndex('pname', 'c_delta', 0);
model.study('std2').feature('param').setIndex('plistarr', '-20,-10, 10,20', 0);

model.label('generic-cell_modified_mat.mph');

model.param.set('theta', 'pi/12');

model.study('std3').feature('matsw').active(true);
model.study('std3').create('param', 'Parametric');
model.study('std3').feature('param').setIndex('pname', 'width', 0);
model.study('std3').feature('param').setIndex('plistarr', '', 0);
model.study('std3').feature('param').setIndex('punit', '', 0);
model.study('std3').feature('param').setIndex('pname', 'width', 0);
model.study('std3').feature('param').setIndex('plistarr', '', 0);
model.study('std3').feature('param').setIndex('punit', '', 0);
model.study('std3').feature('param').setIndex('pname', 'theta', 0);
model.study('std3').feature('param').setIndex('plistarr', 'range(0, pi/2*1/20, pi/2)', 0);

model.sol('sol6').detach;
model.sol.create('sol51');

model.component('comp1').coordSystem('pml1').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml2').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml1').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml2').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml1').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml2').set('analysisCaseDeactivated', false);

model.sol('sol51').study('std3');

model.study('std3').feature('freq').set('notlistsolnum', 1);
model.study('std3').feature('freq').set('notsolnum', '1');
model.study('std3').feature('freq').set('listsolnum', 1);
model.study('std3').feature('freq').set('solnum', '1');

model.sol('sol51').create('st1', 'StudyStep');
model.sol('sol51').feature('st1').set('study', 'std3');
model.sol('sol51').feature('st1').set('studystep', 'freq');
model.sol('sol51').create('v1', 'Variables');
model.sol('sol51').feature('v1').set('control', 'freq');
model.sol('sol51').create('s1', 'Stationary');
model.sol('sol51').feature('s1').set('stol', 0.001);
model.sol('sol51').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol51').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol51').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol51').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol51').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol51').feature('s1').feature.remove('fcDef');
model.sol('sol51').attach('std3');
model.sol.remove('sol7');
model.sol.remove('sol6');

model.batch('pm3').detach;
model.batch.create('pm8', 'MaterialSweep');
model.batch('pm8').study('std3');
model.batch('pm8').create('so1', 'Solutionseq');
model.batch('pm8').feature('so1').set('seq', 'sol51');
model.batch('pm8').feature('so1').set('store', 'on');
model.batch('pm8').feature('so1').set('clear', 'on');
model.batch('pm8').feature('so1').set('psol', 'none');
model.batch('pm8').set('pname', {'matsw.sw1'});
model.batch('pm8').set('plistarr', {'range(1,1,4)'});
model.batch('pm8').set('sweeptype', 'filled');
model.batch('pm8').set('probesel', 'all');
model.batch('pm8').set('probes', {});
model.batch('pm8').set('plot', 'off');
model.batch('pm8').set('err', 'on');
model.batch('pm8').attach('std3');
model.batch('pm8').set('control', 'matsw');
model.batch.create('p2', 'Parametric');
model.batch('p2').study('std3');
model.batch('p2').create('jo1', 'Jobseq');
model.batch('p2').feature('jo1').set('seq', 'pm8');
model.batch('p2').set('pname', {'theta'});
model.batch('p2').set('plistarr', {'range(0, pi/2*1/20, pi/2)'});
model.batch('p2').set('sweeptype', 'sparse');
model.batch('p2').set('err', 'on');
model.batch('p2').attach('std3');
model.batch('p2').set('control', 'param');
model.batch.remove('pm3');
model.batch('pm8').feature.create('ex1', 'Exportseq');
model.batch('pm8').feature('ex1').set('paramfilename', 'index');

model.result.export('data7').set('filename', '/Users/christinafrederick/Google Drive/GitHub/Sonar 2018/twoLayer-rho_delta/txt/parameters/twoLayerSeabed/functions/sol.txt');
model.result.export('data6').set('filename', '/Users/christinafrederick/Google Drive/GitHub/Sonar 2018/twoLayer-rho_delta/txt/parameters/twoLayerSeabed/functions/sol.txt');
model.result.export('data7').set('filename', '/Users/christinafrederick/Google Drive/GitHub/Sonar 2018/twoLayerSeabed/functions/sol.txt');
model.result.export('data6').set('filename', '/Users/christinafrederick/Google Drive/GitHub/Sonar 2018/twoLayerSeabed/parameters/sol.txt');
model.result.export('data5').set('filename', '/Users/christinafrederick/Google Drive/GitHub/Sonar 2018/twoLayerSeabed/sol.txt');

model.sol('sol51').study('std3');

model.study('std3').feature('freq').set('notlistsolnum', 1);
model.study('std3').feature('freq').set('notsolnum', '1');
model.study('std3').feature('freq').set('listsolnum', 1);
model.study('std3').feature('freq').set('solnum', '1');

model.sol('sol51').feature.remove('s1');
model.sol('sol51').feature.remove('v1');
model.sol('sol51').feature.remove('st1');
model.sol('sol51').create('st1', 'StudyStep');
model.sol('sol51').feature('st1').set('study', 'std3');
model.sol('sol51').feature('st1').set('studystep', 'freq');
model.sol('sol51').create('v1', 'Variables');
model.sol('sol51').feature('v1').set('control', 'freq');
model.sol('sol51').create('s1', 'Stationary');
model.sol('sol51').feature('s1').set('stol', 0.001);
model.sol('sol51').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol51').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol51').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol51').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol51').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol51').feature('s1').feature.remove('fcDef');
model.sol('sol51').attach('std3');
model.sol.create('sol52');
model.sol('sol52').study('std3');
model.sol('sol52').label('Parametric Solutions 1');

model.batch('pm8').feature('so1').set('psol', 'sol52');

model.component('comp1').coordSystem('pml1').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml2').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml1').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml2').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml1').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml2').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml1').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml2').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml1').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml2').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml1').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml2').set('analysisCaseDeactivated', false);

model.result.create('pg26', 'PlotGroup2D');
model.result('pg26').set('data', 'dset20');
model.result('pg26').create('surf1', 'Surface');
model.result('pg26').feature('surf1').set('expr', {'acpr.p_t'});
model.result('pg26').label('Acoustic Pressure (acpr) 2');
model.result.create('pg27', 'PlotGroup2D');
model.result('pg27').set('data', 'dset20');
model.result('pg27').create('surf1', 'Surface');
model.result('pg27').feature('surf1').set('expr', {'acpr.Lp'});
model.result('pg27').label('Sound Pressure Level (acpr) 2');
model.result.remove('pg27');
model.result.remove('pg26');

model.study('std3').feature('param').setIndex('plistarr', 'range(pi/40, pi/2*1/20, pi/2)', 0);

model.sol('sol51').study('std3');

model.study('std3').feature('freq').set('notlistsolnum', 1);
model.study('std3').feature('freq').set('notsolnum', '1');
model.study('std3').feature('freq').set('listsolnum', 1);
model.study('std3').feature('freq').set('solnum', '1');

model.sol('sol51').feature.remove('s1');
model.sol('sol51').feature.remove('v1');
model.sol('sol51').feature.remove('st1');
model.sol('sol51').create('st1', 'StudyStep');
model.sol('sol51').feature('st1').set('study', 'std3');
model.sol('sol51').feature('st1').set('studystep', 'freq');
model.sol('sol51').create('v1', 'Variables');
model.sol('sol51').feature('v1').set('control', 'freq');
model.sol('sol51').create('s1', 'Stationary');
model.sol('sol51').feature('s1').set('stol', 0.001);
model.sol('sol51').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol51').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol51').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol51').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol51').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol51').feature('s1').feature.remove('fcDef');
model.sol('sol51').attach('std3');

model.component('comp1').coordSystem('pml1').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml2').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml1').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml2').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml1').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml2').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml1').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml2').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml1').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml2').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml1').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml2').set('analysisCaseDeactivated', false);

model.result.create('pg26', 'PlotGroup2D');
model.result('pg26').set('data', 'dset20');
model.result('pg26').create('surf1', 'Surface');
model.result('pg26').feature('surf1').set('expr', {'acpr.p_t'});
model.result('pg26').label('Acoustic Pressure (acpr) 2');
model.result.create('pg27', 'PlotGroup2D');
model.result('pg27').set('data', 'dset20');
model.result('pg27').create('surf1', 'Surface');
model.result('pg27').feature('surf1').set('expr', {'acpr.Lp'});
model.result('pg27').label('Sound Pressure Level (acpr) 2');
model.result.remove('pg27');
model.result.remove('pg26');
model.result.export('data5').set('data', 'dset19');
model.result.export('data6').set('data', 'dset19');
model.result.export('data7').set('data', 'dset19');
model.result.export('data5').set('alwaysask', false);
model.result.export('data5').run;
model.result.export('data5').set('alwaysask', false);
model.result.export('data6').set('alwaysask', false);
model.result.export('data6').run;
model.result.export('data6').set('alwaysask', false);
model.result.export('data7').set('alwaysask', false);
model.result.export('data7').run;
model.result.export('data7').set('alwaysask', false);

model.sol('sol51').study('std3');

model.study('std3').feature('freq').set('notlistsolnum', 1);
model.study('std3').feature('freq').set('notsolnum', '1');
model.study('std3').feature('freq').set('listsolnum', 1);
model.study('std3').feature('freq').set('solnum', '1');

model.sol('sol51').feature.remove('s1');
model.sol('sol51').feature.remove('v1');
model.sol('sol51').feature.remove('st1');
model.sol('sol51').create('st1', 'StudyStep');
model.sol('sol51').feature('st1').set('study', 'std3');
model.sol('sol51').feature('st1').set('studystep', 'freq');
model.sol('sol51').create('v1', 'Variables');
model.sol('sol51').feature('v1').set('control', 'freq');
model.sol('sol51').create('s1', 'Stationary');
model.sol('sol51').feature('s1').set('stol', 0.001);
model.sol('sol51').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol51').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol51').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol51').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol51').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol51').feature('s1').feature.remove('fcDef');
model.sol('sol51').attach('std3');

model.component('comp1').coordSystem('pml1').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml2').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml1').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml2').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml1').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml2').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml1').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml2').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml1').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml2').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml1').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml2').set('analysisCaseDeactivated', false);

model.result.create('pg26', 'PlotGroup2D');
model.result('pg26').set('data', 'dset20');
model.result('pg26').create('surf1', 'Surface');
model.result('pg26').feature('surf1').set('expr', {'acpr.p_t'});
model.result('pg26').label('Acoustic Pressure (acpr) 2');
model.result.create('pg27', 'PlotGroup2D');
model.result('pg27').set('data', 'dset20');
model.result('pg27').create('surf1', 'Surface');
model.result('pg27').feature('surf1').set('expr', {'acpr.Lp'});
model.result('pg27').label('Sound Pressure Level (acpr) 2');
model.result.remove('pg27');
model.result.remove('pg26');

model.variable('var3').active(false);

model.sol('sol51').study('std3');

model.study('std3').feature('freq').set('notlistsolnum', 1);
model.study('std3').feature('freq').set('notsolnum', '1');
model.study('std3').feature('freq').set('listsolnum', 1);
model.study('std3').feature('freq').set('solnum', '1');

model.sol('sol51').feature.remove('s1');
model.sol('sol51').feature.remove('v1');
model.sol('sol51').feature.remove('st1');
model.sol('sol51').create('st1', 'StudyStep');
model.sol('sol51').feature('st1').set('study', 'std3');
model.sol('sol51').feature('st1').set('studystep', 'freq');
model.sol('sol51').create('v1', 'Variables');
model.sol('sol51').feature('v1').set('control', 'freq');
model.sol('sol51').create('s1', 'Stationary');
model.sol('sol51').feature('s1').set('stol', 0.001);
model.sol('sol51').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol51').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol51').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol51').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol51').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol51').feature('s1').feature.remove('fcDef');
model.sol('sol51').attach('std3');

model.component('comp1').coordSystem('pml1').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml2').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml1').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml2').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml1').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml2').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml1').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml2').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml1').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml2').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml1').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml2').set('analysisCaseDeactivated', false);

model.result.create('pg26', 'PlotGroup2D');
model.result('pg26').set('data', 'dset20');
model.result('pg26').create('surf1', 'Surface');
model.result('pg26').feature('surf1').set('expr', {'acpr.p_t'});
model.result('pg26').label('Acoustic Pressure (acpr) 2');
model.result.create('pg27', 'PlotGroup2D');
model.result('pg27').set('data', 'dset20');
model.result('pg27').create('surf1', 'Surface');
model.result('pg27').feature('surf1').set('expr', {'acpr.Lp'});
model.result('pg27').label('Sound Pressure Level (acpr) 2');
model.result.remove('pg27');
model.result.remove('pg26');

model.material('sw1').feature('mat4').propertyGroup('def').set('density', {'1.7*rho_w+rho_delta'});
model.material('sw1').feature('mat4').propertyGroup('def').set('soundspeed', {'1.05*c_w+c_delta'});
model.material('sw1').feature('mat1').propertyGroup('def').set('soundspeed', {'1.1*c_w+c_delta'});
model.material('sw1').feature('mat1').propertyGroup('def').set('density', {'1.9*rho_w+rho_delta'});

model.sol('sol51').study('std3');

model.study('std3').feature('freq').set('notlistsolnum', 1);
model.study('std3').feature('freq').set('notsolnum', '1');
model.study('std3').feature('freq').set('listsolnum', 1);
model.study('std3').feature('freq').set('solnum', '1');

model.sol('sol51').feature.remove('s1');
model.sol('sol51').feature.remove('v1');
model.sol('sol51').feature.remove('st1');
model.sol('sol51').create('st1', 'StudyStep');
model.sol('sol51').feature('st1').set('study', 'std3');
model.sol('sol51').feature('st1').set('studystep', 'freq');
model.sol('sol51').create('v1', 'Variables');
model.sol('sol51').feature('v1').set('control', 'freq');
model.sol('sol51').create('s1', 'Stationary');
model.sol('sol51').feature('s1').set('stol', 0.001);
model.sol('sol51').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol51').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol51').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol51').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol51').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol51').feature('s1').feature.remove('fcDef');
model.sol('sol51').attach('std3');

model.component('comp1').coordSystem('pml1').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml2').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml1').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml2').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml1').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml2').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml1').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml2').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml1').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml2').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml1').set('analysisCaseDeactivated', false);
model.component('comp1').coordSystem('pml2').set('analysisCaseDeactivated', false);

model.result.create('pg26', 'PlotGroup2D');
model.result('pg26').set('data', 'dset20');
model.result('pg26').create('surf1', 'Surface');
model.result('pg26').feature('surf1').set('expr', {'acpr.p_t'});
model.result('pg26').label('Acoustic Pressure (acpr) 2');
model.result.create('pg27', 'PlotGroup2D');
model.result('pg27').set('data', 'dset20');
model.result('pg27').create('surf1', 'Surface');
model.result('pg27').feature('surf1').set('expr', {'acpr.Lp'});
model.result('pg27').label('Sound Pressure Level (acpr) 2');

model.batch('p2').run;

model.result('pg26').run;
model.result('pg24').run;
model.result('pg24').set('data', 'dset19');
model.result('pg24').run;
model.result('pg24').feature('surf1').set('expr', 'p_inc');
model.result('pg24').run;
model.result('pg24').run;
model.result('pg24').run;
model.result('pg24').run;
model.result('pg24').set('data', 'dset20');
model.result('pg24').setIndex('looplevel', 12, 1);
model.result('pg24').run;
model.result('pg24').run;
model.result('pg24').feature('surf1').set('expr', 'real(p_inc)');
model.result('pg24').run;
model.result('pg24').run;
model.result('pg24').setIndex('looplevel', 10, 1);
model.result('pg24').run;
model.result('pg24').setIndex('looplevel', 11, 1);
model.result('pg24').run;
model.result('pg24').setIndex('looplevel', 12, 1);
model.result('pg24').run;
model.result('pg24').setIndex('looplevel', 17, 1);
model.result('pg24').run;
model.result.export('data7').set('data', 'dset20');
model.result.export('data6').set('data', 'dset20');
model.result.export('data5').set('data', 'dset19');
model.result('pg24').run;
model.result('pg24').set('data', 'dset19');
model.result('pg24').run;
model.result('pg24').set('data', 'dset20');
model.result('pg24').run;
model.result('pg24').setIndex('looplevel', 17, 1);
model.result('pg24').run;

model.label('generic-cell_modified_mat.mph');

model.result.export('data6').set('data', 'dset19');
model.result.export('data7').set('data', 'dset18');
model.result.export('data6').set('data', 'dset18');
model.result.export('data5').set('data', 'dset18');

model.label('generic-cell_modified_mat.mph');
model.label('generic-cell_modified_mat.mph');

model.variable.remove('var3');

out = model;
